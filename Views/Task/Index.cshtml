
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using PagedList;
@using PagedList.Mvc;
@model IPagedList<TaskManagementApp.Models.TaskModel>

@{
    ViewBag.Title = "Task List";
}

<style>
    .pagination {
        margin-top: 20px;
    }

        .pagination li {
            margin: 0 2px;
        }

    .badge {
        font-size: 90%;
    }
</style>

<h2>Your Tasks</h2>


@using (Html.BeginForm("Index", "Task", FormMethod.Get))
{
    <div class="form-inline d-flex justify-content-end mb-3">
        <input type="text"
               name="searchTerm"
               value="@Request.QueryString["searchTerm"]"
               class="form-control mr-2"
               placeholder="Search tasks..." />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
}

<table class="table table-bordered table-striped">
    <thead class="thead-dark">
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Status</th>
            <th>Created Date</th>
            <th>Deadline</th>
            <th>Priority</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var task in Model)
        {
            <tr>
                <td>@task.Title</td>
                <td>@task.Description</td>
                <td>
                    @if (task.Status == "Pending")
                    {
                        <span class="badge badge-warning">Pending</span>
                    }
                    else if (task.Status == "Completed")
                    {
                        <span class="badge badge-success">Completed</span>
                    }
                    else
                    {
                        <span class="badge badge-secondary">@task.Status</span>
                    }
                </td>
                <td>
                    @task.CreatedDate.ToString("dd-MM-yyyy")
                </td>
                <td>
                    @(task.Deadline.HasValue ? task.Deadline.Value.ToString("dd-MM-yyyy"): "—")
                </td>
                <td>
                @(string.IsNullOrEmpty(task.Priority) ? "—" : task.Priority)
                </td>
                <td>
                    <a href="@Url.Action("Edit", new { id = task.TaskId })"
                       class="btn btn-warning btn-sm">Edit</a>
                    <a href="@Url.Action("Delete", new { id = task.TaskId })"
                       class="btn btn-danger btn-sm"
                       onclick="return confirm('Are you sure to delete this task?');">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<a href="@Url.Action("Create", "Task")" class="btn btn-primary mb-3">Add New Task</a>

<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new
    {
        page,
        searchTerm = Request.QueryString["searchTerm"]
    }))
</div>
